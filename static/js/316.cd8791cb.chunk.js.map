{"version":3,"file":"static/js/316.cd8791cb.chunk.js","mappings":"4LACA,QAAwB,qB,uBCiBjB,MAAMA,EAAQC,IAA4C,IAA3C,WAAEC,EAAU,WAAEC,GAAuBF,EAQvD,OACIG,EAAAA,EAAAA,KAAA,OACIC,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,SACVC,UAEFN,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CACHC,cAjB2B,CACnCC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,QAAS,IAcDC,iBAAkBC,EAAAA,GAAW,CACzBL,MAAOK,EAAAA,KAAaL,MAAM,yBAAyBM,SAAS,YAC5DL,SAAUI,EAAAA,KAAaC,SAAS,cAEpCC,SAAUA,CAACC,EAAQC,KACfnB,EAAWkB,EAAQC,EAAY,EACjCZ,SAEAa,IACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACDpB,MAAO,CACHC,QAAS,OACToB,cAAe,SACfC,IAAK,MACLC,SAAU,QACVC,MAAO,QACTnB,SAAA,EAEFN,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,QAAOpB,SAAC,mBACvBN,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,UAAU9B,MAAO,CAAE+B,QAAS,UACpFhC,EAAAA,EAAAA,KAAA,QAAMiC,UAAWhC,EAAYK,UACzBN,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CAACN,KAAK,aAGvB5B,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,WAAUpB,SAAC,cAC1BN,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACFC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,YAAY,YACZ9B,MAAO,CAAE+B,QAAS,UAEtBhC,EAAAA,EAAAA,KAAA,QAAMiC,UAAWhC,EAAYK,UACzBN,EAAAA,EAAAA,KAACkC,EAAAA,GAAY,CAACN,KAAK,gBAGvBR,EAAAA,EAAAA,MAAA,OACInB,MAAO,CACHC,QAAS,OACTqB,IAAK,OACLpB,WAAY,UACdG,SAAA,EAEFN,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAACC,KAAK,aAAaC,KAAK,WAAWC,GAAG,gBAC5C9B,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,aAAYpB,SAAC,kBAC5BN,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACHC,MAAM,UACNP,KAAK,SACL5B,MAAO,CACH+B,QAAS,WACTK,WAAY,cAKxBrC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEqC,UAAW,SAAUjC,OAAQ,QAASC,SAC/Ca,EAAMoB,SAAUvC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEuC,MAAO,OAAQlC,SAAEa,EAAMoB,WAE1DzC,IACGsB,EAAAA,EAAAA,MAAA,OACInB,MAAO,CACHwC,UAAW,OACXhB,MAAO,OACPvB,QAAS,OACToB,cAAe,SACfnB,WAAY,UACdG,SAAA,EAEFN,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACFC,KAAK,UACLC,KAAK,QACLE,YAAY,WACZ9B,MAAO,CAAE+B,QAAS,MAAOP,MAAO,WAEpCzB,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEuB,SAAU,SAAWkB,IAAK5C,KACxCE,EAAAA,EAAAA,KAAA,QAAAM,SAAM,uCAMxB,C","sources":["webpack://it-incubator-social-network/./src/pages/login/login.module.scss?a063","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"login_error__gtb+A\"};","import { ErrorMessage, Field, Form, Formik, FormikHelpers, FormikProps } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { LoginDataType } from 'api/social-network-api'\r\nimport style from './login.module.scss'\r\nimport { Button } from 'components/Button/Button'\r\n\r\ntype PropsType = {\r\n    loginAsync: (data: LoginDataType, submitProps: FormikHelpers<LoginFormValues>) => void\r\n    captchaUrl: null | string\r\n}\r\n\r\nexport interface LoginFormValues {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\n\r\nexport const Login = ({ captchaUrl, loginAsync }: PropsType) => {\r\n    const initialValues: LoginFormValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captcha: '',\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100vh',\r\n            }}\r\n        >\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={Yup.object({\r\n                    email: Yup.string().email('Invalid email address').required('Required'),\r\n                    password: Yup.string().required('Required'),\r\n                })}\r\n                onSubmit={(values, submitProps) => {\r\n                    loginAsync(values, submitProps)\r\n                }}\r\n            >\r\n                {(props: FormikProps<LoginFormValues>) => (\r\n                    <Form\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: '5px',\r\n                            maxWidth: '450px',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <label htmlFor='email'>Email Address</label>\r\n                        <Field name='email' type='email' id='email' placeholder='Email@*' style={{ padding: '5px' }} />\r\n                        <span className={style.error}>\r\n                            <ErrorMessage name='email' />\r\n                        </span>\r\n\r\n                        <label htmlFor='password'>Password</label>\r\n                        <Field\r\n                            name='password'\r\n                            type='password'\r\n                            id='password'\r\n                            placeholder='Password*'\r\n                            style={{ padding: '5px' }}\r\n                        />\r\n                        <span className={style.error}>\r\n                            <ErrorMessage name='password' />\r\n                        </span>\r\n\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                gap: '10px',\r\n                                alignItems: 'center',\r\n                            }}\r\n                        >\r\n                            <Field name='rememberMe' type='checkbox' id='rememberMe' />\r\n                            <label htmlFor='rememberMe'> Remember Me</label>\r\n                            <Button\r\n                                label='Sign In'\r\n                                type='submit'\r\n                                style={{\r\n                                    padding: '5px 10px',\r\n                                    marginLeft: 'auto',\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div style={{ textAlign: 'center', height: '20px' }}>\r\n                            {props.status && <span style={{ color: 'red' }}>{props.status}</span>}\r\n                        </div>\r\n                        {captchaUrl && (\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '15px',\r\n                                    width: '100%',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    alignItems: 'center',\r\n                                }}\r\n                            >\r\n                                <Field\r\n                                    name='captcha'\r\n                                    type='input'\r\n                                    placeholder='captcha*'\r\n                                    style={{ padding: '5px', width: '100%' }}\r\n                                />\r\n                                <img style={{ maxWidth: '300px' }} src={captchaUrl} />\r\n                                <span>please, enter the captcha</span>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Login","_ref","captchaUrl","loginAsync","_jsx","style","display","alignItems","justifyContent","height","children","Formik","initialValues","email","password","rememberMe","captcha","validationSchema","Yup","required","onSubmit","values","submitProps","props","_jsxs","Form","flexDirection","gap","maxWidth","width","htmlFor","Field","name","type","id","placeholder","padding","className","ErrorMessage","Button","label","marginLeft","textAlign","status","color","marginTop","src"],"sourceRoot":""}