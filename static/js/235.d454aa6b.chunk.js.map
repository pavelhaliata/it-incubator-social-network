{"version":3,"file":"static/js/235.d454aa6b.chunk.js","mappings":"iPACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,UAAY,2BAA2B,aAAe,8BAA8B,cAAgB,+BAA+B,SAAW,2B,UCAlO,EAA0B,yBAA1B,EAAqE,iCAArE,EAAsH,+BAAtH,EAAuK,iCAAvK,EAAwN,+BAAxN,EAAuQ,+B,SCS1PA,EAAO,qGAef,OAfe,8BAEhB,WACI,OACI,iBAAKC,UAAWC,EAAc,WAC1B,gBAAKD,UAAWC,EAAsB,UAClC,gBAAKC,IAAKC,KAAKC,MAAMC,OAAQC,IAAKH,KAAKC,MAAMG,UAEjD,iBAAKP,UAAWC,EAAoB,WAChC,gBAAKD,UAAWC,EAAsB,SAAEE,KAAKC,MAAMG,QACnD,gBAAKP,UAAWC,EAAoB,SAAEE,KAAKC,MAAMI,WACjD,gBAAKR,UAAWC,EAAoB,SAAEE,KAAKC,MAAMK,YAIjE,KAAC,EAfe,CAASC,EAAAA,WCJhBC,EAAO,qJAad,OAbc,oCAEhBC,yBAA2B,SAACC,GACxBA,EAAMC,iBACN,EAAKV,MAAMW,qBAAqBF,EAAMG,cAAcC,MACxD,EAAE,EACFC,mBAAqB,WACjB,EAAKd,MAAMe,eACf,EAAE,EACFC,4BAA8B,SAACP,GACT,UAAdA,EAAMQ,KAAmBR,EAAMS,SAC/B,EAAKlB,MAAMe,eAEnB,EAAC,EA+BA,OA/BA,8BAED,WACI,OACI,iBAAKnB,UAAS,UAAKC,EAAAA,SAAgB,WAC/B,gBAAKD,UAAS,UAAKC,EAAAA,YAAiB,YAAIA,EAAAA,QAAe,SAClDE,KAAKC,MAAMmB,cAAgBpB,KAAKC,MAAMmB,aAAaC,KAAI,SAACC,GACrD,OACI,SAAC1B,EAAO,CAEJM,OAAQoB,EAAKpB,OACbE,KAAMkB,EAAKlB,KACXC,QAASiB,EAAKjB,QACdC,KAAMgB,EAAKhB,MAJNgB,EAAKC,GAOtB,OAEJ,iBAAK1B,UAAWC,EAAAA,aAAmB,WAC/B,qBACI0B,WAAW,EACX3B,UAAWC,EAAAA,cACX2B,YAAY,mBACZX,MAAOd,KAAKC,MAAMyB,iBAClBC,SAAU3B,KAAKS,yBACfmB,UAAW5B,KAAKiB,+BAEpB,SAACY,EAAA,EAAM,CAAChC,UAAWC,EAAAA,SAAgBgC,QAAS9B,KAAKe,mBAAmB,uBAIpF,KAAC,EA5Ce,CAASR,EAAAA,U","sources":["webpack://it-incubator-social-network/./src/pages/MainPage/Dialogs/Dialogs.module.scss?727c","webpack://it-incubator-social-network/./src/pages/MainPage/Dialogs/Message/Message.module.scss?100b","pages/MainPage/Dialogs/Message/Message.tsx","pages/MainPage/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__rFWzo\",\"author\":\"Dialogs_author__2pfaz\",\"companion\":\"Dialogs_companion__Vhbx0\",\"dialog_input\":\"Dialogs_dialog_input__UnA2B\",\"input_message\":\"Dialogs_input_message__JCpos\",\"send_btn\":\"Dialogs_send_btn__KgD5-\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__4Az-o\",\"message__avatar\":\"Message_message__avatar__1uS4+\",\"message__body\":\"Message_message__body__QSsyP\",\"message__author\":\"Message_message__author__2irU0\",\"message__text\":\"Message_message__text__eIqDt\",\"message__time\":\"Message_message__time__59cV7\"};","import React, {Component} from 'react';\r\nimport style from \"./Message.module.scss\"\r\n\r\ntype MessagePropsType ={\r\n    avatar: string\r\n\tname: string\r\n\tmessage: string\r\n\ttime: string\r\n}\r\n\r\nexport class Message extends Component<MessagePropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.message}>\r\n                <div className={style.message__avatar}>\r\n                    <img src={this.props.avatar} alt={this.props.name} />\r\n                </div>\r\n                <div className={style.message__body}>\r\n                    <div className={style.message__author}>{this.props.name}</div>\r\n                    <div className={style.message__text}>{this.props.message}</div>\r\n                    <div className={style.message__time}>{this.props.time}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};","import {Component, ChangeEvent, KeyboardEvent} from 'react';\r\nimport style from \"./Dialogs.module.scss\";\r\nimport {Button} from \"../../../components/Button/Button\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Message} from \"./Message/Message\";\r\n\r\nexport class Dialogs extends Component<DialogsPropsType> {\r\n\r\n    onChangeTextInputHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        event.preventDefault();\r\n        this.props.updateNewMessageText(event.currentTarget.value)\r\n    };\r\n    sendMessageHandler = () => {\r\n        this.props.addNewMessage()\r\n    };\r\n    onKeyDownSendMessageHandler = (event: KeyboardEvent) => {\r\n        if (event.key === \"Enter\" && event.ctrlKey) {\r\n            this.props.addNewMessage()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${style.dialogs}`}>\r\n                <div className={`${style.dialog_item} ${style.author}`}>\r\n                    {this.props.messagesData && this.props.messagesData.map((data) => {\r\n                        return (\r\n                            <Message\r\n                                key={data.id}\r\n                                avatar={data.avatar}\r\n                                name={data.name}\r\n                                message={data.message}\r\n                                time={data.time}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className={style.dialog_input}>\r\n                    <textarea\r\n                        autoFocus={true}\r\n                        className={style.input_message}\r\n                        placeholder=\"Write message...\"\r\n                        value={this.props.messageTextValue}\r\n                        onChange={this.onChangeTextInputHandler}\r\n                        onKeyDown={this.onKeyDownSendMessageHandler}\r\n                    />\r\n                    <Button className={style.send_btn} onClick={this.sendMessageHandler}>Send</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"names":["Message","className","style","src","this","props","avatar","alt","name","message","time","Component","Dialogs","onChangeTextInputHandler","event","preventDefault","updateNewMessageText","currentTarget","value","sendMessageHandler","addNewMessage","onKeyDownSendMessageHandler","key","ctrlKey","messagesData","map","data","id","autoFocus","placeholder","messageTextValue","onChange","onKeyDown","Button","onClick"],"sourceRoot":""}