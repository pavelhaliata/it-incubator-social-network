{"version":3,"file":"static/js/316.e39773bc.chunk.js","mappings":"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","sources":["webpack://it-incubator-social-network/./src/pages/login/login.module.scss?a063","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"login_error__gtb+A\",\"link\":\"login_link__GEyzd\"};","import {\n  ErrorMessage,\n  Field,\n  Form,\n  Formik,\n  FormikHelpers,\n  FormikProps,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport { LoginDataType } from \"api/social-network-api\";\nimport style from \"./login.module.scss\";\nimport { Button } from \"components/Button/Button\";\n\ntype PropsType = {\n  loginAsync: (\n    data: LoginDataType,\n    submitProps: FormikHelpers<LoginFormValues>\n  ) => void;\n  captchaUrl: null | string;\n};\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  captcha?: string;\n}\n\nexport const Login = ({ captchaUrl, loginAsync }: PropsType) => {\n  const initialValues: LoginFormValues = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n    captcha: \"\",\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n          password: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={(values, submitProps) => {\n          loginAsync(values, submitProps);\n        }}\n      >\n        {(props: FormikProps<LoginFormValues>) => (\n          <Form\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"5px\",\n              maxWidth: \"450px\",\n              width: \"100%\",\n            }}\n          >\n            <div>\n              <p>\n                To log in get registered{\" \"}\n                <a\n                  href=\"https://social-network.samuraijs.com/\"\n                  target=\"_blank\"\n                  className={style.link}\n                >\n                  <strong>here</strong>\n                </a>{\" \"}\n                or use common test account credentials:\n              </p>\n              <p>\n                <strong>Email:</strong> free@samuraijs.com{\" \"}\n              </p>\n              <p>\n                <strong>Password:</strong> free\n              </p>\n            </div>\n            <h1>Sign In</h1>\n            <label htmlFor=\"email\">Email Address</label>\n            <Field\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email@*\"\n              style={{ padding: \"5px\" }}\n            />\n            <span className={style.error}>\n              <ErrorMessage name=\"email\" />\n            </span>\n\n            <label htmlFor=\"password\">Password</label>\n            <Field\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password*\"\n              style={{ padding: \"5px\" }}\n            />\n            <span className={style.error}>\n              <ErrorMessage name=\"password\" />\n            </span>\n\n            <div\n              style={{\n                display: \"flex\",\n                gap: \"10px\",\n                alignItems: \"center\",\n              }}\n            >\n              <Field name=\"rememberMe\" type=\"checkbox\" id=\"rememberMe\" />\n              <label htmlFor=\"rememberMe\"> Remember Me</label>\n              <Button\n                label=\"Sign In\"\n                type=\"submit\"\n                style={{\n                  padding: \"5px 10px\",\n                  marginLeft: \"auto\",\n                }}\n              />\n            </div>\n\n            <div style={{ textAlign: \"center\", height: \"20px\" }}>\n              {props.status && (\n                <span style={{ color: \"red\" }}>{props.status}</span>\n              )}\n            </div>\n            {captchaUrl && (\n              <div\n                style={{\n                  marginTop: \"15px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Field\n                  name=\"captcha\"\n                  type=\"input\"\n                  placeholder=\"captcha*\"\n                  style={{ padding: \"5px\", width: \"100%\" }}\n                />\n                <img style={{ maxWidth: \"300px\" }} src={captchaUrl} />\n                <span>please, enter the captcha</span>\n              </div>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n"],"names":["Login","_ref","captchaUrl","loginAsync","_jsx","style","display","alignItems","justifyContent","height","children","Formik","initialValues","email","password","rememberMe","captcha","validationSchema","Yup","required","onSubmit","values","submitProps","props","_jsxs","Form","flexDirection","gap","maxWidth","width","href","target","className","htmlFor","Field","name","type","id","placeholder","padding","ErrorMessage","Button","label","marginLeft","textAlign","status","color","marginTop","src"],"sourceRoot":""}