{"version":3,"file":"static/js/316.4ea1df70.chunk.js","mappings":"iNACA,EAAwB,qB,mBCeXA,EAAQ,SAACC,GAOlB,OACI,gBACIC,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,SACV,UAEF,SAAC,KAAM,CACHC,cAhB2B,CACnCC,MAAO,GACPC,SAAU,GACVC,YAAY,GAcJC,iBAAkBC,EAAAA,GAAW,CACzBJ,MAAOI,EAAAA,KAAaJ,MAAM,yBAAyBK,SAAS,YAC5DJ,SAAUG,EAAAA,KAAaC,SAAS,cAEpCC,SAAU,SAACC,EAAQC,GACff,EAAMgB,WAAWF,EAAQC,EAC7B,EAAE,SAED,SAACf,GAAmC,OACjC,UAAC,KAAI,CACDC,MAAO,CACHC,QAAS,OACTe,cAAe,SACfC,IAAK,MACLC,SAAU,QACVC,MAAO,QACT,WAEF,kBAAOC,QAAQ,QAAO,4BACtB,SAAC,KAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,UAAUxB,MAAO,CAAEyB,QAAS,UACpF,iBAAMC,UAAW1B,EAAY,UACzB,SAAC,KAAY,CAACqB,KAAK,aAGvB,kBAAOD,QAAQ,WAAU,uBACzB,SAAC,KAAK,CACFC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,YAAY,YACZxB,MAAO,CAAEyB,QAAS,UAEtB,iBAAMC,UAAW1B,EAAY,UACzB,SAAC,KAAY,CAACqB,KAAK,gBAGvB,iBACIrB,MAAO,CACHC,QAAS,OACTgB,IAAK,OACLf,WAAY,UACd,WAEF,SAAC,KAAK,CAACmB,KAAK,aAAaC,KAAK,WAAWC,GAAG,gBAC5C,kBAAOH,QAAQ,aAAY,2BAC3B,SAACO,EAAA,EAAM,CACHL,KAAK,SACLtB,MAAO,CACHyB,QAAS,WACTG,WAAY,QACd,yBAMV,gBAAK5B,MAAO,CAAE6B,UAAW,SAAUzB,OAAQ,QAAS,SAC/CL,EAAM+B,SAAU,iBAAM9B,MAAO,CAAE+B,MAAO,OAAQ,SAAEhC,EAAM+B,aAExD,KAK3B,C","sources":["webpack://it-incubator-social-network/./src/pages/login/login.module.scss?a063","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"login_error__gtb+A\"};","import { ErrorMessage, Field, Form, Formik, FormikHelpers, FormikProps } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { LoginDataType } from 'api/social-network-api'\r\nimport style from './login.module.scss'\r\nimport { Button } from 'components/Button/Button'\r\n\r\ntype PropsType = {\r\n    loginAsync: (data: LoginDataType, submitProps: FormikHelpers<LoginFormValues>) => void\r\n}\r\n\r\nexport interface LoginFormValues {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const Login = (props: PropsType) => {\r\n    const initialValues: LoginFormValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: '100vh',\r\n            }}\r\n        >\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={Yup.object({\r\n                    email: Yup.string().email('Invalid email address').required('Required'),\r\n                    password: Yup.string().required('Required'),\r\n                })}\r\n                onSubmit={(values, submitProps) => {\r\n                    props.loginAsync(values, submitProps)\r\n                }}\r\n            >\r\n                {(props: FormikProps<LoginFormValues>) => (\r\n                    <Form\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: '5px',\r\n                            maxWidth: '450px',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <label htmlFor='email'>Email Address</label>\r\n                        <Field name='email' type='email' id='email' placeholder='Email@*' style={{ padding: '5px' }} />\r\n                        <span className={style.error}>\r\n                            <ErrorMessage name='email' />\r\n                        </span>\r\n\r\n                        <label htmlFor='password'>Password</label>\r\n                        <Field\r\n                            name='password'\r\n                            type='password'\r\n                            id='password'\r\n                            placeholder='Password*'\r\n                            style={{ padding: '5px' }}\r\n                        />\r\n                        <span className={style.error}>\r\n                            <ErrorMessage name='password' />\r\n                        </span>\r\n\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                gap: '10px',\r\n                                alignItems: 'center',\r\n                            }}\r\n                        >\r\n                            <Field name='rememberMe' type='checkbox' id='rememberMe' />\r\n                            <label htmlFor='rememberMe'> Remember Me</label>\r\n                            <Button\r\n                                type='submit'\r\n                                style={{\r\n                                    padding: '5px 10px',\r\n                                    marginLeft: 'auto',\r\n                                }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div style={{ textAlign: 'center', height: '20px' }}>\r\n                            {props.status && <span style={{ color: 'red' }}>{props.status}</span>}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Login","props","style","display","alignItems","justifyContent","height","initialValues","email","password","rememberMe","validationSchema","Yup","required","onSubmit","values","submitProps","loginAsync","flexDirection","gap","maxWidth","width","htmlFor","name","type","id","placeholder","padding","className","Button","marginLeft","textAlign","status","color"],"sourceRoot":""}