{"version":3,"file":"static/js/127.e970cdc7.chunk.js","mappings":"sLACA,QAA6B,6BAA7B,EAAuE,6BAAvE,EAAiH,6BAAjH,EAA4J,8BAA5J,EAAsM,4BAAtM,EAA+O,6B,cCA/O,SAAgB,QAAU,sBAAsB,KAAO,oB,aCShD,MAAMA,UAAaC,EAAAA,UACtBC,MAAAA,GACI,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,QAAQC,UAC3BC,EAAAA,EAAAA,MAAA,WAASJ,UAAWC,EAAOI,KAAKF,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOK,eACvBP,EAAAA,EAAAA,KAAA,KAAAI,SAAII,KAAKC,MAAMH,QACfN,EAAAA,EAAAA,KAAA,QAAAI,SAAOI,KAAKC,MAAMC,WAIlC,ECfG,MAAMC,UAAiBb,EAAAA,UAA6Bc,WAAAA,GAAA,SAAAC,WAAA,KAMvDC,0BAA6BC,IACzBA,EAAMC,iBAENR,KAAKC,MAAMQ,iBAAiBF,EAAMG,cAAcC,MAAM,EACzD,KACDC,8BAAiCL,IACzBA,EAAMM,SAAyB,UAAdN,EAAMO,KACvBd,KAAKC,MAAMc,YACf,EACH,KAEDC,qBAAuB,KACnBhB,KAAKC,MAAMc,YAAY,CAC1B,CAlBDE,iBAAAA,GACIC,SAASC,MAAQ,sBACjBnB,KAAKC,MAAMmB,eAAe,YAC9B,CAiBA7B,MAAAA,GACI,OACIM,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKJ,UAAW6B,EAAiB1B,SAAA,EAC7BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAW6B,EAAiB1B,UAC7BJ,EAAAA,EAAAA,KAAA,YACI+B,WAAW,EACX9B,UAAW6B,EACXE,KAAK,OACLb,MAAOX,KAAKC,MAAMwB,cAClBC,YAAY,+CACZC,SAAU3B,KAAKM,0BACfsB,UAAW5B,KAAKY,mCAIxBpB,EAAAA,EAAAA,KAAA,OAAKC,UAAW6B,EAAkB1B,UAC9BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAW6B,EAAgB1B,UAC5BJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACC,MAAM,cAAcC,QAAQ,WAAWC,QAAShC,KAAKgB,+BAIzExB,EAAAA,EAAAA,KAAA,OAAKC,UAAW6B,EAAiB1B,SAC5BI,KAAKC,MAAMgC,WACRjC,KAAKC,MAAMgC,UAAUC,KAAIC,IAAQ3C,EAAAA,EAAAA,KAACH,EAAI,CAAeS,KAAMqC,EAAKrC,KAAMI,KAAMiC,EAAKjC,MAArCiC,EAAKC,UAIrE,E","sources":["webpack://it-incubator-social-network/./src/pages/Blogpage/BlogPage.module.scss?7fe2","webpack://it-incubator-social-network/./src/pages/Blogpage/Post/Post.module.scss?2aa5","pages/Blogpage/Post/Post.tsx","pages/Blogpage/BlogPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_inner\":\"BlogPage_form_inner__PanIk\",\"form_group\":\"BlogPage_form_group__wXbzb\",\"input_text\":\"BlogPage_input_text__N3lMB\",\"form_button\":\"BlogPage_form_button__i662B\",\"block_btn\":\"BlogPage_block_btn__4nbpq\",\"post_items\":\"BlogPage_post_items__+yok+\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Post_wrapper__WPHYC\",\"post\":\"Post_post__WxhXc\"};","import { Component } from 'react'\r\nimport styles from './Post.module.scss'\r\n\r\ntype PostPropsType = {\r\n    /** User Post */\r\n    post: string\r\n    /** Time Post */\r\n    time: string\r\n}\r\n/** UI Component Post */\r\nexport class Post extends Component<PostPropsType> {\r\n    render() {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <article className={styles.post}>\r\n                    <div className={styles.post_author}></div>\r\n                    <p>{this.props.post}</p>\r\n                    <span>{this.props.time}</span>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { ChangeEvent, Component, KeyboardEvent } from 'react'\r\nimport style from './BlogPage.module.scss'\r\nimport { Button } from '../../components/Button/Button'\r\nimport { Post } from './Post/Post'\r\nimport { BlogPagePropsType } from './BlogPageContainer'\r\n\r\nexport class BlogPage extends Component<BlogPagePropsType> {\r\n    componentDidMount() {\r\n        document.title = 'Blog page page blog'\r\n        this.props.setHeaderTitle('blog page')\r\n    }\r\n\r\n    onChangeInputValueHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        event.preventDefault()\r\n\r\n        this.props.setPostTextValue(event.currentTarget.value)\r\n    }\r\n    onKeyDownCreateNewPostHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.ctrlKey && event.key === 'Enter') {\r\n            this.props.createPost()\r\n        }\r\n    }\r\n\r\n    createNewPostHandler = () => {\r\n        this.props.createPost()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={style.form_inner}>\r\n                    <div className={style.form_group}>\r\n                        <textarea\r\n                            autoFocus={true}\r\n                            className={style.input_text}\r\n                            name='text'\r\n                            value={this.props.postTextValue}\r\n                            placeholder='Remember, to be very polite to each other ;)'\r\n                            onChange={this.onChangeInputValueHandler}\r\n                            onKeyDown={this.onKeyDownCreateNewPostHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={style.form_button}>\r\n                        <div className={style.block_btn}>\r\n                            <Button label='create post' variant='outlined' onClick={this.createNewPostHandler} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.post_items}>\r\n                    {this.props.postsData &&\r\n                        this.props.postsData.map(data => <Post key={data.id} post={data.post} time={data.time} />)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"],"names":["Post","Component","render","_jsx","className","styles","wrapper","children","_jsxs","post","post_author","this","props","time","BlogPage","constructor","arguments","onChangeInputValueHandler","event","preventDefault","setPostTextValue","currentTarget","value","onKeyDownCreateNewPostHandler","ctrlKey","key","createPost","createNewPostHandler","componentDidMount","document","title","setHeaderTitle","_Fragment","style","autoFocus","name","postTextValue","placeholder","onChange","onKeyDown","Button","label","variant","onClick","postsData","map","data","id"],"sourceRoot":""}